name: Frontend Tests & Quality Checks

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'penguin-x-frontend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'penguin-x-frontend/**'

defaults:
  run:
    working-directory: penguin-x-frontend

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: penguin-x-frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Type check
      run: npx tsc --noEmit
    
    - name: Run unit tests
      run: npm run test:run
    
    - name: Generate coverage report
      run: npm run test:coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: penguin-x-frontend/coverage
        flags: frontend
        name: penguin-x-frontend
    
    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      uses: romeovs/lcov-reporter-action@v0.3.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        lcov-file: penguin-x-frontend/coverage/lcov.info
        delete-old-comments: true

  build-and-bundle-check:
    name: Build & Bundle Size Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: penguin-x-frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Check bundle size
      run: npm run bundle-size
    
    - name: Upload bundle analysis
      uses: actions/upload-artifact@v4
      with:
        name: bundle-analysis
        path: penguin-x-frontend/bundle-size-results.json
        retention-days: 30
    
    - name: Comment bundle size on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          try {
            const resultsPath = path.join('penguin-x-frontend', 'bundle-size-results.json');
            const results = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));
            
            const formatBytes = (bytes) => {
              if (bytes === 0) return '0 Bytes';
              const k = 1024;
              const sizes = ['Bytes', 'KB', 'MB', 'GB'];
              const i = Math.floor(Math.log(bytes) / Math.log(k));
              return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            };
            
            const status = results.hasErrors ? '❌' : '✅';
            const comment = `## ${status} Bundle Size Report
            
            **Total Bundle Size:** ${formatBytes(results.totalSize)}
            **Main Bundle:** ${formatBytes(results.mainSize)}
            **Vendor Bundles:** ${formatBytes(results.vendorSize)}
            
            ### JavaScript Bundles
            ${results.bundles.js.map(bundle => 
              `- ${bundle.name}: ${formatBytes(bundle.size)}`
            ).join('\n')}
            
            ### CSS Bundles
            ${results.bundles.css.map(bundle => 
              `- ${bundle.name}: ${formatBytes(bundle.size)}`
            ).join('\n')}
            
            ${results.hasErrors ? '⚠️ **Warning:** Some bundles exceed size limits!' : '✅ All bundles are within size limits.'}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('No bundle results found or failed to parse:', error);
          }

  accessibility-check:
    name: Accessibility Testing
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: penguin-x-frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Install Playwright
      run: npx playwright install chromium
    
    - name: Start preview server
      run: |
        npm run preview &
        npx wait-on http://localhost:3000
    
    - name: Run accessibility tests with axe
      run: |
        npx @axe-core/cli http://localhost:3000 \
          --exit \
          --reporter=json \
          --output=accessibility-results.json \
          --tags=wcag2a,wcag2aa
    
    - name: Upload accessibility results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: accessibility-results
        path: penguin-x-frontend/accessibility-results.json
        retention-days: 30

  security-check:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: penguin-x-frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level high
    
    - name: Check for known vulnerabilities
      run: npx audit-ci --config audit-ci.json
      continue-on-error: true

  performance-budget:
    name: Performance Budget Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: penguin-x-frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli
    
    - name: Run Lighthouse CI
      run: |
        npm run preview &
        npx wait-on http://localhost:3000
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
